---
export interface Props {
  name: string;
  html_url: string;
  description?: string | null;
  language?: string | null;
}
const { name, html_url, description, language } = Astro.props;
---

<div class="flex w-full sm:w-1/2 flex-col">
  <div
    class="rounded border-skin-fill/50 border-[1px] p-2 mb-2 ml-2 hover:bg-skin-card-muted/10 hover:scale-[1.01] transition-all backgroundColor"
  >
    <div class="flex items-center text-skin-accent">
      <svg viewBox="0 0 16 16" class="mr-2 h-4 w-4" aria-hidden="true">
        <path
          fill="currentColor"
          d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"
        ></path>
      </svg>
      <a
        href={html_url}
        target="_blank"
        rel="noreferrer"
        class="cursor-pointer font-medium"
      >
        <span class="text-skin-accent"> {name}</span>
      </a>
    </div>
    <div class="mb-4 mt-2 text-xs">{description}</div>
    <div class="mt-auto flex text-xs">
      {
        language && (
          <div class="mr-4 flex items-center">
            <span class="relative h-3 w-3 rounded-full bg-skin-accent" />
            <span class="pl-2">{language}</span>
          </div>
        )
      }
    </div>
  </div>
</div>

<style>
  .backgroundColor {
    background: radial-gradient(ellipse at 0% 0%, #bf398910 0, transparent 75%),
      radial-gradient(ellipse at 30% 0%, #096bde10 0, transparent 75%);
  }
</style>
